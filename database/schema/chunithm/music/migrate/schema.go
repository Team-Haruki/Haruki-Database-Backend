// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/entsql"
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// ChartDataColumns holds the columns for the "chart_data" table.
	ChartDataColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "music_id", Type: field.TypeInt},
		{Name: "difficulty", Type: field.TypeInt},
		{Name: "creator", Type: field.TypeString, Nullable: true, Size: 100},
		{Name: "bpm", Type: field.TypeFloat64, Nullable: true},
		{Name: "tap_count", Type: field.TypeInt, Nullable: true},
		{Name: "hold_count", Type: field.TypeInt, Nullable: true},
		{Name: "slide_count", Type: field.TypeInt, Nullable: true},
		{Name: "air_count", Type: field.TypeInt, Nullable: true},
		{Name: "flick_count", Type: field.TypeInt, Nullable: true},
		{Name: "total_count", Type: field.TypeInt, Nullable: true},
	}
	// ChartDataTable holds the schema information for the "chart_data" table.
	ChartDataTable = &schema.Table{
		Name:       "chart_data",
		Columns:    ChartDataColumns,
		PrimaryKey: []*schema.Column{ChartDataColumns[0]},
	}
	// MusicColumns holds the columns for the "music" table.
	MusicColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "music_id", Type: field.TypeInt, Unique: true},
		{Name: "title", Type: field.TypeString, Size: 255},
		{Name: "artist", Type: field.TypeString, Size: 255},
		{Name: "category", Type: field.TypeString, Nullable: true, Size: 50},
		{Name: "version", Type: field.TypeString, Nullable: true, Size: 10},
		{Name: "release_date", Type: field.TypeTime, Nullable: true},
		{Name: "is_deleted", Type: field.TypeBool, Default: false},
		{Name: "deleted_version", Type: field.TypeString, Nullable: true, Size: 10},
	}
	// MusicTable holds the schema information for the "music" table.
	MusicTable = &schema.Table{
		Name:       "music",
		Columns:    MusicColumns,
		PrimaryKey: []*schema.Column{MusicColumns[0]},
	}
	// MusicDifficultiesColumns holds the columns for the "music_difficulties" table.
	MusicDifficultiesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "music_id", Type: field.TypeInt},
		{Name: "version", Type: field.TypeString, Size: 10},
		{Name: "diff0_const", Type: field.TypeFloat64, Nullable: true},
		{Name: "diff1_const", Type: field.TypeFloat64, Nullable: true},
		{Name: "diff2_const", Type: field.TypeFloat64, Nullable: true},
		{Name: "diff3_const", Type: field.TypeFloat64, Nullable: true},
		{Name: "diff4_const", Type: field.TypeFloat64, Nullable: true},
	}
	// MusicDifficultiesTable holds the schema information for the "music_difficulties" table.
	MusicDifficultiesTable = &schema.Table{
		Name:       "music_difficulties",
		Columns:    MusicDifficultiesColumns,
		PrimaryKey: []*schema.Column{MusicDifficultiesColumns[0]},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		ChartDataTable,
		MusicTable,
		MusicDifficultiesTable,
	}
)

func init() {
	ChartDataTable.Annotation = &entsql.Annotation{
		Table: "chart_data",
	}
	MusicTable.Annotation = &entsql.Annotation{
		Table: "music",
	}
	MusicDifficultiesTable.Annotation = &entsql.Annotation{
		Table: "music_difficulties",
	}
}
