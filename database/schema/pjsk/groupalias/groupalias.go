// Code generated by ent, DO NOT EDIT.

package groupalias

import (
	"entgo.io/ent/dialect/sql"
)

const (
	// Label holds the string label denoting the groupalias type in the database.
	Label = "group_alias"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldPlatform holds the string denoting the platform field in the database.
	FieldPlatform = "platform"
	// FieldGroupID holds the string denoting the group_id field in the database.
	FieldGroupID = "group_id"
	// FieldAliasType holds the string denoting the alias_type field in the database.
	FieldAliasType = "alias_type"
	// FieldAliasTypeID holds the string denoting the alias_type_id field in the database.
	FieldAliasTypeID = "alias_type_id"
	// FieldAlias holds the string denoting the alias field in the database.
	FieldAlias = "alias"
	// Table holds the table name of the groupalias in the database.
	Table = "group_alias"
)

// Columns holds all SQL columns for groupalias fields.
var Columns = []string{
	FieldID,
	FieldPlatform,
	FieldGroupID,
	FieldAliasType,
	FieldAliasTypeID,
	FieldAlias,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// PlatformValidator is a validator for the "platform" field. It is called by the builders before save.
	PlatformValidator func(string) error
	// GroupIDValidator is a validator for the "group_id" field. It is called by the builders before save.
	GroupIDValidator func(string) error
	// AliasTypeValidator is a validator for the "alias_type" field. It is called by the builders before save.
	AliasTypeValidator func(string) error
	// AliasValidator is a validator for the "alias" field. It is called by the builders before save.
	AliasValidator func(string) error
)

// OrderOption defines the ordering options for the GroupAlias queries.
type OrderOption func(*sql.Selector)

// ByID orders the results by the id field.
func ByID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldID, opts...).ToFunc()
}

// ByPlatform orders the results by the platform field.
func ByPlatform(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldPlatform, opts...).ToFunc()
}

// ByGroupID orders the results by the group_id field.
func ByGroupID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldGroupID, opts...).ToFunc()
}

// ByAliasType orders the results by the alias_type field.
func ByAliasType(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldAliasType, opts...).ToFunc()
}

// ByAliasTypeID orders the results by the alias_type_id field.
func ByAliasTypeID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldAliasTypeID, opts...).ToFunc()
}

// ByAlias orders the results by the alias field.
func ByAlias(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldAlias, opts...).ToFunc()
}
