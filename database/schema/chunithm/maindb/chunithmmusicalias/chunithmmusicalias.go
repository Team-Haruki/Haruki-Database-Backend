// Code generated by ent, DO NOT EDIT.

package chunithmmusicalias

import (
	"entgo.io/ent/dialect/sql"
)

const (
	// Label holds the string label denoting the chunithmmusicalias type in the database.
	Label = "chunithm_music_alias"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldMusicID holds the string denoting the music_id field in the database.
	FieldMusicID = "music_id"
	// FieldAlias holds the string denoting the alias field in the database.
	FieldAlias = "alias"
	// Table holds the table name of the chunithmmusicalias in the database.
	Table = "chunithm_music_alias"
)

// Columns holds all SQL columns for chunithmmusicalias fields.
var Columns = []string{
	FieldID,
	FieldMusicID,
	FieldAlias,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// AliasValidator is a validator for the "alias" field. It is called by the builders before save.
	AliasValidator func(string) error
)

// OrderOption defines the ordering options for the ChunithmMusicAlias queries.
type OrderOption func(*sql.Selector)

// ByID orders the results by the id field.
func ByID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldID, opts...).ToFunc()
}

// ByMusicID orders the results by the music_id field.
func ByMusicID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldMusicID, opts...).ToFunc()
}

// ByAlias orders the results by the alias field.
func ByAlias(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldAlias, opts...).ToFunc()
}
