// Code generated by ent, DO NOT EDIT.

package chunithmmusicalias

import (
	"haruki-database/database/schema/chunithm/maindb/predicate"

	"entgo.io/ent/dialect/sql"
)

// ID filters vertices based on their ID field.
func ID(id int64) predicate.ChunithmMusicAlias {
	return predicate.ChunithmMusicAlias(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id int64) predicate.ChunithmMusicAlias {
	return predicate.ChunithmMusicAlias(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id int64) predicate.ChunithmMusicAlias {
	return predicate.ChunithmMusicAlias(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...int64) predicate.ChunithmMusicAlias {
	return predicate.ChunithmMusicAlias(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...int64) predicate.ChunithmMusicAlias {
	return predicate.ChunithmMusicAlias(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id int64) predicate.ChunithmMusicAlias {
	return predicate.ChunithmMusicAlias(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id int64) predicate.ChunithmMusicAlias {
	return predicate.ChunithmMusicAlias(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id int64) predicate.ChunithmMusicAlias {
	return predicate.ChunithmMusicAlias(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id int64) predicate.ChunithmMusicAlias {
	return predicate.ChunithmMusicAlias(sql.FieldLTE(FieldID, id))
}

// MusicID applies equality check predicate on the "music_id" field. It's identical to MusicIDEQ.
func MusicID(v int) predicate.ChunithmMusicAlias {
	return predicate.ChunithmMusicAlias(sql.FieldEQ(FieldMusicID, v))
}

// Alias applies equality check predicate on the "alias" field. It's identical to AliasEQ.
func Alias(v string) predicate.ChunithmMusicAlias {
	return predicate.ChunithmMusicAlias(sql.FieldEQ(FieldAlias, v))
}

// MusicIDEQ applies the EQ predicate on the "music_id" field.
func MusicIDEQ(v int) predicate.ChunithmMusicAlias {
	return predicate.ChunithmMusicAlias(sql.FieldEQ(FieldMusicID, v))
}

// MusicIDNEQ applies the NEQ predicate on the "music_id" field.
func MusicIDNEQ(v int) predicate.ChunithmMusicAlias {
	return predicate.ChunithmMusicAlias(sql.FieldNEQ(FieldMusicID, v))
}

// MusicIDIn applies the In predicate on the "music_id" field.
func MusicIDIn(vs ...int) predicate.ChunithmMusicAlias {
	return predicate.ChunithmMusicAlias(sql.FieldIn(FieldMusicID, vs...))
}

// MusicIDNotIn applies the NotIn predicate on the "music_id" field.
func MusicIDNotIn(vs ...int) predicate.ChunithmMusicAlias {
	return predicate.ChunithmMusicAlias(sql.FieldNotIn(FieldMusicID, vs...))
}

// MusicIDGT applies the GT predicate on the "music_id" field.
func MusicIDGT(v int) predicate.ChunithmMusicAlias {
	return predicate.ChunithmMusicAlias(sql.FieldGT(FieldMusicID, v))
}

// MusicIDGTE applies the GTE predicate on the "music_id" field.
func MusicIDGTE(v int) predicate.ChunithmMusicAlias {
	return predicate.ChunithmMusicAlias(sql.FieldGTE(FieldMusicID, v))
}

// MusicIDLT applies the LT predicate on the "music_id" field.
func MusicIDLT(v int) predicate.ChunithmMusicAlias {
	return predicate.ChunithmMusicAlias(sql.FieldLT(FieldMusicID, v))
}

// MusicIDLTE applies the LTE predicate on the "music_id" field.
func MusicIDLTE(v int) predicate.ChunithmMusicAlias {
	return predicate.ChunithmMusicAlias(sql.FieldLTE(FieldMusicID, v))
}

// AliasEQ applies the EQ predicate on the "alias" field.
func AliasEQ(v string) predicate.ChunithmMusicAlias {
	return predicate.ChunithmMusicAlias(sql.FieldEQ(FieldAlias, v))
}

// AliasNEQ applies the NEQ predicate on the "alias" field.
func AliasNEQ(v string) predicate.ChunithmMusicAlias {
	return predicate.ChunithmMusicAlias(sql.FieldNEQ(FieldAlias, v))
}

// AliasIn applies the In predicate on the "alias" field.
func AliasIn(vs ...string) predicate.ChunithmMusicAlias {
	return predicate.ChunithmMusicAlias(sql.FieldIn(FieldAlias, vs...))
}

// AliasNotIn applies the NotIn predicate on the "alias" field.
func AliasNotIn(vs ...string) predicate.ChunithmMusicAlias {
	return predicate.ChunithmMusicAlias(sql.FieldNotIn(FieldAlias, vs...))
}

// AliasGT applies the GT predicate on the "alias" field.
func AliasGT(v string) predicate.ChunithmMusicAlias {
	return predicate.ChunithmMusicAlias(sql.FieldGT(FieldAlias, v))
}

// AliasGTE applies the GTE predicate on the "alias" field.
func AliasGTE(v string) predicate.ChunithmMusicAlias {
	return predicate.ChunithmMusicAlias(sql.FieldGTE(FieldAlias, v))
}

// AliasLT applies the LT predicate on the "alias" field.
func AliasLT(v string) predicate.ChunithmMusicAlias {
	return predicate.ChunithmMusicAlias(sql.FieldLT(FieldAlias, v))
}

// AliasLTE applies the LTE predicate on the "alias" field.
func AliasLTE(v string) predicate.ChunithmMusicAlias {
	return predicate.ChunithmMusicAlias(sql.FieldLTE(FieldAlias, v))
}

// AliasContains applies the Contains predicate on the "alias" field.
func AliasContains(v string) predicate.ChunithmMusicAlias {
	return predicate.ChunithmMusicAlias(sql.FieldContains(FieldAlias, v))
}

// AliasHasPrefix applies the HasPrefix predicate on the "alias" field.
func AliasHasPrefix(v string) predicate.ChunithmMusicAlias {
	return predicate.ChunithmMusicAlias(sql.FieldHasPrefix(FieldAlias, v))
}

// AliasHasSuffix applies the HasSuffix predicate on the "alias" field.
func AliasHasSuffix(v string) predicate.ChunithmMusicAlias {
	return predicate.ChunithmMusicAlias(sql.FieldHasSuffix(FieldAlias, v))
}

// AliasEqualFold applies the EqualFold predicate on the "alias" field.
func AliasEqualFold(v string) predicate.ChunithmMusicAlias {
	return predicate.ChunithmMusicAlias(sql.FieldEqualFold(FieldAlias, v))
}

// AliasContainsFold applies the ContainsFold predicate on the "alias" field.
func AliasContainsFold(v string) predicate.ChunithmMusicAlias {
	return predicate.ChunithmMusicAlias(sql.FieldContainsFold(FieldAlias, v))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.ChunithmMusicAlias) predicate.ChunithmMusicAlias {
	return predicate.ChunithmMusicAlias(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.ChunithmMusicAlias) predicate.ChunithmMusicAlias {
	return predicate.ChunithmMusicAlias(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.ChunithmMusicAlias) predicate.ChunithmMusicAlias {
	return predicate.ChunithmMusicAlias(sql.NotPredicates(p))
}
