// Code generated by ent, DO NOT EDIT.

package user

import (
	"entgo.io/ent/dialect/sql"
)

const (
	// Label holds the string label denoting the user type in the database.
	Label = "user"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldOwnerUserID holds the string denoting the owner_user_id field in the database.
	FieldOwnerUserID = "owner_user_id"
	// FieldBotID holds the string denoting the bot_id field in the database.
	FieldBotID = "bot_id"
	// FieldCredential holds the string denoting the credential field in the database.
	FieldCredential = "credential"
	// Table holds the table name of the user in the database.
	Table = "user"
)

// Columns holds all SQL columns for user fields.
var Columns = []string{
	FieldID,
	FieldOwnerUserID,
	FieldBotID,
	FieldCredential,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// CredentialValidator is a validator for the "credential" field. It is called by the builders before save.
	CredentialValidator func(string) error
)

// OrderOption defines the ordering options for the User queries.
type OrderOption func(*sql.Selector)

// ByID orders the results by the id field.
func ByID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldID, opts...).ToFunc()
}

// ByOwnerUserID orders the results by the owner_user_id field.
func ByOwnerUserID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldOwnerUserID, opts...).ToFunc()
}

// ByBotID orders the results by the bot_id field.
func ByBotID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldBotID, opts...).ToFunc()
}

// ByCredential orders the results by the credential field.
func ByCredential(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldCredential, opts...).ToFunc()
}
