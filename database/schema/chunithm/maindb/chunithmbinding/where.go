// Code generated by ent, DO NOT EDIT.

package chunithmbinding

import (
	"haruki-database/database/schema/chunithm/maindb/predicate"

	"entgo.io/ent/dialect/sql"
)

// ID filters vertices based on their ID field.
func ID(id int) predicate.ChunithmBinding {
	return predicate.ChunithmBinding(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id int) predicate.ChunithmBinding {
	return predicate.ChunithmBinding(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id int) predicate.ChunithmBinding {
	return predicate.ChunithmBinding(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...int) predicate.ChunithmBinding {
	return predicate.ChunithmBinding(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...int) predicate.ChunithmBinding {
	return predicate.ChunithmBinding(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id int) predicate.ChunithmBinding {
	return predicate.ChunithmBinding(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id int) predicate.ChunithmBinding {
	return predicate.ChunithmBinding(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id int) predicate.ChunithmBinding {
	return predicate.ChunithmBinding(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id int) predicate.ChunithmBinding {
	return predicate.ChunithmBinding(sql.FieldLTE(FieldID, id))
}

// ImID applies equality check predicate on the "im_id" field. It's identical to ImIDEQ.
func ImID(v string) predicate.ChunithmBinding {
	return predicate.ChunithmBinding(sql.FieldEQ(FieldImID, v))
}

// Platform applies equality check predicate on the "platform" field. It's identical to PlatformEQ.
func Platform(v string) predicate.ChunithmBinding {
	return predicate.ChunithmBinding(sql.FieldEQ(FieldPlatform, v))
}

// Server applies equality check predicate on the "server" field. It's identical to ServerEQ.
func Server(v string) predicate.ChunithmBinding {
	return predicate.ChunithmBinding(sql.FieldEQ(FieldServer, v))
}

// AimeID applies equality check predicate on the "aime_id" field. It's identical to AimeIDEQ.
func AimeID(v string) predicate.ChunithmBinding {
	return predicate.ChunithmBinding(sql.FieldEQ(FieldAimeID, v))
}

// ImIDEQ applies the EQ predicate on the "im_id" field.
func ImIDEQ(v string) predicate.ChunithmBinding {
	return predicate.ChunithmBinding(sql.FieldEQ(FieldImID, v))
}

// ImIDNEQ applies the NEQ predicate on the "im_id" field.
func ImIDNEQ(v string) predicate.ChunithmBinding {
	return predicate.ChunithmBinding(sql.FieldNEQ(FieldImID, v))
}

// ImIDIn applies the In predicate on the "im_id" field.
func ImIDIn(vs ...string) predicate.ChunithmBinding {
	return predicate.ChunithmBinding(sql.FieldIn(FieldImID, vs...))
}

// ImIDNotIn applies the NotIn predicate on the "im_id" field.
func ImIDNotIn(vs ...string) predicate.ChunithmBinding {
	return predicate.ChunithmBinding(sql.FieldNotIn(FieldImID, vs...))
}

// ImIDGT applies the GT predicate on the "im_id" field.
func ImIDGT(v string) predicate.ChunithmBinding {
	return predicate.ChunithmBinding(sql.FieldGT(FieldImID, v))
}

// ImIDGTE applies the GTE predicate on the "im_id" field.
func ImIDGTE(v string) predicate.ChunithmBinding {
	return predicate.ChunithmBinding(sql.FieldGTE(FieldImID, v))
}

// ImIDLT applies the LT predicate on the "im_id" field.
func ImIDLT(v string) predicate.ChunithmBinding {
	return predicate.ChunithmBinding(sql.FieldLT(FieldImID, v))
}

// ImIDLTE applies the LTE predicate on the "im_id" field.
func ImIDLTE(v string) predicate.ChunithmBinding {
	return predicate.ChunithmBinding(sql.FieldLTE(FieldImID, v))
}

// ImIDContains applies the Contains predicate on the "im_id" field.
func ImIDContains(v string) predicate.ChunithmBinding {
	return predicate.ChunithmBinding(sql.FieldContains(FieldImID, v))
}

// ImIDHasPrefix applies the HasPrefix predicate on the "im_id" field.
func ImIDHasPrefix(v string) predicate.ChunithmBinding {
	return predicate.ChunithmBinding(sql.FieldHasPrefix(FieldImID, v))
}

// ImIDHasSuffix applies the HasSuffix predicate on the "im_id" field.
func ImIDHasSuffix(v string) predicate.ChunithmBinding {
	return predicate.ChunithmBinding(sql.FieldHasSuffix(FieldImID, v))
}

// ImIDEqualFold applies the EqualFold predicate on the "im_id" field.
func ImIDEqualFold(v string) predicate.ChunithmBinding {
	return predicate.ChunithmBinding(sql.FieldEqualFold(FieldImID, v))
}

// ImIDContainsFold applies the ContainsFold predicate on the "im_id" field.
func ImIDContainsFold(v string) predicate.ChunithmBinding {
	return predicate.ChunithmBinding(sql.FieldContainsFold(FieldImID, v))
}

// PlatformEQ applies the EQ predicate on the "platform" field.
func PlatformEQ(v string) predicate.ChunithmBinding {
	return predicate.ChunithmBinding(sql.FieldEQ(FieldPlatform, v))
}

// PlatformNEQ applies the NEQ predicate on the "platform" field.
func PlatformNEQ(v string) predicate.ChunithmBinding {
	return predicate.ChunithmBinding(sql.FieldNEQ(FieldPlatform, v))
}

// PlatformIn applies the In predicate on the "platform" field.
func PlatformIn(vs ...string) predicate.ChunithmBinding {
	return predicate.ChunithmBinding(sql.FieldIn(FieldPlatform, vs...))
}

// PlatformNotIn applies the NotIn predicate on the "platform" field.
func PlatformNotIn(vs ...string) predicate.ChunithmBinding {
	return predicate.ChunithmBinding(sql.FieldNotIn(FieldPlatform, vs...))
}

// PlatformGT applies the GT predicate on the "platform" field.
func PlatformGT(v string) predicate.ChunithmBinding {
	return predicate.ChunithmBinding(sql.FieldGT(FieldPlatform, v))
}

// PlatformGTE applies the GTE predicate on the "platform" field.
func PlatformGTE(v string) predicate.ChunithmBinding {
	return predicate.ChunithmBinding(sql.FieldGTE(FieldPlatform, v))
}

// PlatformLT applies the LT predicate on the "platform" field.
func PlatformLT(v string) predicate.ChunithmBinding {
	return predicate.ChunithmBinding(sql.FieldLT(FieldPlatform, v))
}

// PlatformLTE applies the LTE predicate on the "platform" field.
func PlatformLTE(v string) predicate.ChunithmBinding {
	return predicate.ChunithmBinding(sql.FieldLTE(FieldPlatform, v))
}

// PlatformContains applies the Contains predicate on the "platform" field.
func PlatformContains(v string) predicate.ChunithmBinding {
	return predicate.ChunithmBinding(sql.FieldContains(FieldPlatform, v))
}

// PlatformHasPrefix applies the HasPrefix predicate on the "platform" field.
func PlatformHasPrefix(v string) predicate.ChunithmBinding {
	return predicate.ChunithmBinding(sql.FieldHasPrefix(FieldPlatform, v))
}

// PlatformHasSuffix applies the HasSuffix predicate on the "platform" field.
func PlatformHasSuffix(v string) predicate.ChunithmBinding {
	return predicate.ChunithmBinding(sql.FieldHasSuffix(FieldPlatform, v))
}

// PlatformEqualFold applies the EqualFold predicate on the "platform" field.
func PlatformEqualFold(v string) predicate.ChunithmBinding {
	return predicate.ChunithmBinding(sql.FieldEqualFold(FieldPlatform, v))
}

// PlatformContainsFold applies the ContainsFold predicate on the "platform" field.
func PlatformContainsFold(v string) predicate.ChunithmBinding {
	return predicate.ChunithmBinding(sql.FieldContainsFold(FieldPlatform, v))
}

// ServerEQ applies the EQ predicate on the "server" field.
func ServerEQ(v string) predicate.ChunithmBinding {
	return predicate.ChunithmBinding(sql.FieldEQ(FieldServer, v))
}

// ServerNEQ applies the NEQ predicate on the "server" field.
func ServerNEQ(v string) predicate.ChunithmBinding {
	return predicate.ChunithmBinding(sql.FieldNEQ(FieldServer, v))
}

// ServerIn applies the In predicate on the "server" field.
func ServerIn(vs ...string) predicate.ChunithmBinding {
	return predicate.ChunithmBinding(sql.FieldIn(FieldServer, vs...))
}

// ServerNotIn applies the NotIn predicate on the "server" field.
func ServerNotIn(vs ...string) predicate.ChunithmBinding {
	return predicate.ChunithmBinding(sql.FieldNotIn(FieldServer, vs...))
}

// ServerGT applies the GT predicate on the "server" field.
func ServerGT(v string) predicate.ChunithmBinding {
	return predicate.ChunithmBinding(sql.FieldGT(FieldServer, v))
}

// ServerGTE applies the GTE predicate on the "server" field.
func ServerGTE(v string) predicate.ChunithmBinding {
	return predicate.ChunithmBinding(sql.FieldGTE(FieldServer, v))
}

// ServerLT applies the LT predicate on the "server" field.
func ServerLT(v string) predicate.ChunithmBinding {
	return predicate.ChunithmBinding(sql.FieldLT(FieldServer, v))
}

// ServerLTE applies the LTE predicate on the "server" field.
func ServerLTE(v string) predicate.ChunithmBinding {
	return predicate.ChunithmBinding(sql.FieldLTE(FieldServer, v))
}

// ServerContains applies the Contains predicate on the "server" field.
func ServerContains(v string) predicate.ChunithmBinding {
	return predicate.ChunithmBinding(sql.FieldContains(FieldServer, v))
}

// ServerHasPrefix applies the HasPrefix predicate on the "server" field.
func ServerHasPrefix(v string) predicate.ChunithmBinding {
	return predicate.ChunithmBinding(sql.FieldHasPrefix(FieldServer, v))
}

// ServerHasSuffix applies the HasSuffix predicate on the "server" field.
func ServerHasSuffix(v string) predicate.ChunithmBinding {
	return predicate.ChunithmBinding(sql.FieldHasSuffix(FieldServer, v))
}

// ServerEqualFold applies the EqualFold predicate on the "server" field.
func ServerEqualFold(v string) predicate.ChunithmBinding {
	return predicate.ChunithmBinding(sql.FieldEqualFold(FieldServer, v))
}

// ServerContainsFold applies the ContainsFold predicate on the "server" field.
func ServerContainsFold(v string) predicate.ChunithmBinding {
	return predicate.ChunithmBinding(sql.FieldContainsFold(FieldServer, v))
}

// AimeIDEQ applies the EQ predicate on the "aime_id" field.
func AimeIDEQ(v string) predicate.ChunithmBinding {
	return predicate.ChunithmBinding(sql.FieldEQ(FieldAimeID, v))
}

// AimeIDNEQ applies the NEQ predicate on the "aime_id" field.
func AimeIDNEQ(v string) predicate.ChunithmBinding {
	return predicate.ChunithmBinding(sql.FieldNEQ(FieldAimeID, v))
}

// AimeIDIn applies the In predicate on the "aime_id" field.
func AimeIDIn(vs ...string) predicate.ChunithmBinding {
	return predicate.ChunithmBinding(sql.FieldIn(FieldAimeID, vs...))
}

// AimeIDNotIn applies the NotIn predicate on the "aime_id" field.
func AimeIDNotIn(vs ...string) predicate.ChunithmBinding {
	return predicate.ChunithmBinding(sql.FieldNotIn(FieldAimeID, vs...))
}

// AimeIDGT applies the GT predicate on the "aime_id" field.
func AimeIDGT(v string) predicate.ChunithmBinding {
	return predicate.ChunithmBinding(sql.FieldGT(FieldAimeID, v))
}

// AimeIDGTE applies the GTE predicate on the "aime_id" field.
func AimeIDGTE(v string) predicate.ChunithmBinding {
	return predicate.ChunithmBinding(sql.FieldGTE(FieldAimeID, v))
}

// AimeIDLT applies the LT predicate on the "aime_id" field.
func AimeIDLT(v string) predicate.ChunithmBinding {
	return predicate.ChunithmBinding(sql.FieldLT(FieldAimeID, v))
}

// AimeIDLTE applies the LTE predicate on the "aime_id" field.
func AimeIDLTE(v string) predicate.ChunithmBinding {
	return predicate.ChunithmBinding(sql.FieldLTE(FieldAimeID, v))
}

// AimeIDContains applies the Contains predicate on the "aime_id" field.
func AimeIDContains(v string) predicate.ChunithmBinding {
	return predicate.ChunithmBinding(sql.FieldContains(FieldAimeID, v))
}

// AimeIDHasPrefix applies the HasPrefix predicate on the "aime_id" field.
func AimeIDHasPrefix(v string) predicate.ChunithmBinding {
	return predicate.ChunithmBinding(sql.FieldHasPrefix(FieldAimeID, v))
}

// AimeIDHasSuffix applies the HasSuffix predicate on the "aime_id" field.
func AimeIDHasSuffix(v string) predicate.ChunithmBinding {
	return predicate.ChunithmBinding(sql.FieldHasSuffix(FieldAimeID, v))
}

// AimeIDEqualFold applies the EqualFold predicate on the "aime_id" field.
func AimeIDEqualFold(v string) predicate.ChunithmBinding {
	return predicate.ChunithmBinding(sql.FieldEqualFold(FieldAimeID, v))
}

// AimeIDContainsFold applies the ContainsFold predicate on the "aime_id" field.
func AimeIDContainsFold(v string) predicate.ChunithmBinding {
	return predicate.ChunithmBinding(sql.FieldContainsFold(FieldAimeID, v))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.ChunithmBinding) predicate.ChunithmBinding {
	return predicate.ChunithmBinding(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.ChunithmBinding) predicate.ChunithmBinding {
	return predicate.ChunithmBinding(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.ChunithmBinding) predicate.ChunithmBinding {
	return predicate.ChunithmBinding(sql.NotPredicates(p))
}
