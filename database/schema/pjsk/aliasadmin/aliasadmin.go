// Code generated by ent, DO NOT EDIT.

package aliasadmin

import (
	"entgo.io/ent/dialect/sql"
)

const (
	// Label holds the string label denoting the aliasadmin type in the database.
	Label = "alias_admin"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldPlatform holds the string denoting the platform field in the database.
	FieldPlatform = "platform"
	// FieldImID holds the string denoting the im_id field in the database.
	FieldImID = "im_id"
	// FieldName holds the string denoting the name field in the database.
	FieldName = "name"
	// Table holds the table name of the aliasadmin in the database.
	Table = "alias_admins"
)

// Columns holds all SQL columns for aliasadmin fields.
var Columns = []string{
	FieldID,
	FieldPlatform,
	FieldImID,
	FieldName,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// PlatformValidator is a validator for the "platform" field. It is called by the builders before save.
	PlatformValidator func(string) error
	// ImIDValidator is a validator for the "im_id" field. It is called by the builders before save.
	ImIDValidator func(string) error
	// NameValidator is a validator for the "name" field. It is called by the builders before save.
	NameValidator func(string) error
)

// OrderOption defines the ordering options for the AliasAdmin queries.
type OrderOption func(*sql.Selector)

// ByID orders the results by the id field.
func ByID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldID, opts...).ToFunc()
}

// ByPlatform orders the results by the platform field.
func ByPlatform(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldPlatform, opts...).ToFunc()
}

// ByImID orders the results by the im_id field.
func ByImID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldImID, opts...).ToFunc()
}

// ByName orders the results by the name field.
func ByName(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldName, opts...).ToFunc()
}
