// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// AliasColumns holds the columns for the "alias" table.
	AliasColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "alias_type", Type: field.TypeString, Size: 20},
		{Name: "alias_type_id", Type: field.TypeInt},
		{Name: "alias", Type: field.TypeString, Size: 100},
	}
	// AliasTable holds the schema information for the "alias" table.
	AliasTable = &schema.Table{
		Name:       "alias",
		Columns:    AliasColumns,
		PrimaryKey: []*schema.Column{AliasColumns[0]},
	}
	// AliasAdminsColumns holds the columns for the "alias_admins" table.
	AliasAdminsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "platform", Type: field.TypeString, Size: 20},
		{Name: "im_id", Type: field.TypeString, Size: 100},
		{Name: "name", Type: field.TypeString, Size: 100},
	}
	// AliasAdminsTable holds the schema information for the "alias_admins" table.
	AliasAdminsTable = &schema.Table{
		Name:       "alias_admins",
		Columns:    AliasAdminsColumns,
		PrimaryKey: []*schema.Column{AliasAdminsColumns[0]},
	}
	// GroupAliasColumns holds the columns for the "group_alias" table.
	GroupAliasColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "platform", Type: field.TypeString, Size: 20},
		{Name: "group_id", Type: field.TypeString, Size: 50},
		{Name: "alias_type", Type: field.TypeString, Size: 20},
		{Name: "alias_type_id", Type: field.TypeInt},
		{Name: "alias", Type: field.TypeString, Size: 100},
	}
	// GroupAliasTable holds the schema information for the "group_alias" table.
	GroupAliasTable = &schema.Table{
		Name:       "group_alias",
		Columns:    GroupAliasColumns,
		PrimaryKey: []*schema.Column{GroupAliasColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "groupalias_platform_group_id_alias_type_alias_type_id_alias",
				Unique:  true,
				Columns: []*schema.Column{GroupAliasColumns[1], GroupAliasColumns[2], GroupAliasColumns[3], GroupAliasColumns[4], GroupAliasColumns[5]},
			},
		},
	}
	// PendingAliasColumns holds the columns for the "pending_alias" table.
	PendingAliasColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "alias_type", Type: field.TypeString, Size: 20},
		{Name: "alias_type_id", Type: field.TypeInt},
		{Name: "alias", Type: field.TypeString, Size: 100},
		{Name: "submitted_by", Type: field.TypeString, Size: 100},
		{Name: "submitted_at", Type: field.TypeTime},
	}
	// PendingAliasTable holds the schema information for the "pending_alias" table.
	PendingAliasTable = &schema.Table{
		Name:       "pending_alias",
		Columns:    PendingAliasColumns,
		PrimaryKey: []*schema.Column{PendingAliasColumns[0]},
	}
	// RejectedAliasColumns holds the columns for the "rejected_alias" table.
	RejectedAliasColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "alias_type", Type: field.TypeString, Size: 20},
		{Name: "alias_type_id", Type: field.TypeInt},
		{Name: "alias", Type: field.TypeString, Size: 100},
		{Name: "reviewed_by", Type: field.TypeString, Size: 100},
		{Name: "reason", Type: field.TypeString, Size: 255},
		{Name: "reviewed_at", Type: field.TypeTime},
	}
	// RejectedAliasTable holds the schema information for the "rejected_alias" table.
	RejectedAliasTable = &schema.Table{
		Name:       "rejected_alias",
		Columns:    RejectedAliasColumns,
		PrimaryKey: []*schema.Column{RejectedAliasColumns[0]},
	}
	// UserBindingsColumns holds the columns for the "user_bindings" table.
	UserBindingsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "platform", Type: field.TypeString, Size: 20},
		{Name: "im_id", Type: field.TypeString, Size: 30},
		{Name: "user_id", Type: field.TypeString, Size: 30},
		{Name: "server", Type: field.TypeString, Size: 2},
		{Name: "visible", Type: field.TypeBool, Default: true},
	}
	// UserBindingsTable holds the schema information for the "user_bindings" table.
	UserBindingsTable = &schema.Table{
		Name:       "user_bindings",
		Columns:    UserBindingsColumns,
		PrimaryKey: []*schema.Column{UserBindingsColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "userbinding_platform_im_id_server_user_id",
				Unique:  true,
				Columns: []*schema.Column{UserBindingsColumns[1], UserBindingsColumns[2], UserBindingsColumns[4], UserBindingsColumns[3]},
			},
		},
	}
	// UserDefaultBindingsColumns holds the columns for the "user_default_bindings" table.
	UserDefaultBindingsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "im_id", Type: field.TypeString, Size: 30},
		{Name: "platform", Type: field.TypeString, Size: 20},
		{Name: "server", Type: field.TypeString, Size: 7},
		{Name: "binding_id", Type: field.TypeInt},
	}
	// UserDefaultBindingsTable holds the schema information for the "user_default_bindings" table.
	UserDefaultBindingsTable = &schema.Table{
		Name:       "user_default_bindings",
		Columns:    UserDefaultBindingsColumns,
		PrimaryKey: []*schema.Column{UserDefaultBindingsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "user_default_bindings_user_bindings_default_refs",
				Columns:    []*schema.Column{UserDefaultBindingsColumns[4]},
				RefColumns: []*schema.Column{UserBindingsColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "userdefaultbinding_im_id_platform_server",
				Unique:  true,
				Columns: []*schema.Column{UserDefaultBindingsColumns[1], UserDefaultBindingsColumns[2], UserDefaultBindingsColumns[3]},
			},
		},
	}
	// UserPreferencesColumns holds the columns for the "user_preferences" table.
	UserPreferencesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "im_id", Type: field.TypeString, Size: 30},
		{Name: "platform", Type: field.TypeString, Size: 20},
		{Name: "option", Type: field.TypeString, Size: 50},
		{Name: "value", Type: field.TypeString, Size: 50},
	}
	// UserPreferencesTable holds the schema information for the "user_preferences" table.
	UserPreferencesTable = &schema.Table{
		Name:       "user_preferences",
		Columns:    UserPreferencesColumns,
		PrimaryKey: []*schema.Column{UserPreferencesColumns[0]},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		AliasTable,
		AliasAdminsTable,
		GroupAliasTable,
		PendingAliasTable,
		RejectedAliasTable,
		UserBindingsTable,
		UserDefaultBindingsTable,
		UserPreferencesTable,
	}
)

func init() {
	UserDefaultBindingsTable.ForeignKeys[0].RefTable = UserBindingsTable
}
