// Code generated by ent, DO NOT EDIT.

package chunithmmusic

import (
	"entgo.io/ent/dialect/sql"
)

const (
	// Label holds the string label denoting the chunithmmusic type in the database.
	Label = "chunithm_music"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldMusicID holds the string denoting the music_id field in the database.
	FieldMusicID = "music_id"
	// FieldTitle holds the string denoting the title field in the database.
	FieldTitle = "title"
	// FieldArtist holds the string denoting the artist field in the database.
	FieldArtist = "artist"
	// FieldCategory holds the string denoting the category field in the database.
	FieldCategory = "category"
	// FieldVersion holds the string denoting the version field in the database.
	FieldVersion = "version"
	// FieldReleaseDate holds the string denoting the release_date field in the database.
	FieldReleaseDate = "release_date"
	// FieldIsDeleted holds the string denoting the is_deleted field in the database.
	FieldIsDeleted = "is_deleted"
	// FieldDeletedVersion holds the string denoting the deleted_version field in the database.
	FieldDeletedVersion = "deleted_version"
	// Table holds the table name of the chunithmmusic in the database.
	Table = "chunithm_musics"
)

// Columns holds all SQL columns for chunithmmusic fields.
var Columns = []string{
	FieldID,
	FieldMusicID,
	FieldTitle,
	FieldArtist,
	FieldCategory,
	FieldVersion,
	FieldReleaseDate,
	FieldIsDeleted,
	FieldDeletedVersion,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// TitleValidator is a validator for the "title" field. It is called by the builders before save.
	TitleValidator func(string) error
	// ArtistValidator is a validator for the "artist" field. It is called by the builders before save.
	ArtistValidator func(string) error
	// CategoryValidator is a validator for the "category" field. It is called by the builders before save.
	CategoryValidator func(string) error
	// VersionValidator is a validator for the "version" field. It is called by the builders before save.
	VersionValidator func(string) error
	// DefaultIsDeleted holds the default value on creation for the "is_deleted" field.
	DefaultIsDeleted int
	// DeletedVersionValidator is a validator for the "deleted_version" field. It is called by the builders before save.
	DeletedVersionValidator func(string) error
)

// OrderOption defines the ordering options for the ChunithmMusic queries.
type OrderOption func(*sql.Selector)

// ByID orders the results by the id field.
func ByID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldID, opts...).ToFunc()
}

// ByMusicID orders the results by the music_id field.
func ByMusicID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldMusicID, opts...).ToFunc()
}

// ByTitle orders the results by the title field.
func ByTitle(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldTitle, opts...).ToFunc()
}

// ByArtist orders the results by the artist field.
func ByArtist(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldArtist, opts...).ToFunc()
}

// ByCategory orders the results by the category field.
func ByCategory(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldCategory, opts...).ToFunc()
}

// ByVersion orders the results by the version field.
func ByVersion(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldVersion, opts...).ToFunc()
}

// ByReleaseDate orders the results by the release_date field.
func ByReleaseDate(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldReleaseDate, opts...).ToFunc()
}

// ByIsDeleted orders the results by the is_deleted field.
func ByIsDeleted(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldIsDeleted, opts...).ToFunc()
}

// ByDeletedVersion orders the results by the deleted_version field.
func ByDeletedVersion(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldDeletedVersion, opts...).ToFunc()
}
